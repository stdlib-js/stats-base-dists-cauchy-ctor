// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-entropy@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-median@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-mode@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-cdf@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-logcdf@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-logpdf@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-pdf@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cauchy-quantile@v0.1.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function f(){var s,e;if(!(this instanceof f))return 0===arguments.length?new f:new f(arguments[0],arguments[1]);if(arguments.length){if(s=arguments[1],!n(e=arguments[0])||r(e))throw new TypeError(c("invalid argument. Location parameter must be a number. Value: `%s`.",e));if(!i(s))throw new TypeError(c("invalid argument. Scale parameter must be a positive number. Value: `%s`.",s))}else e=0,s=1;return t(this,"x0",{configurable:!1,enumerable:!0,get:function(){return e},set:function(t){if(!n(t)||r(t))throw new TypeError(c("invalid assignment. Must be a number. Value: `%s`.",t));e=t}}),t(this,"gamma",{configurable:!1,enumerable:!0,get:function(){return s},set:function(t){if(!i(t))throw new TypeError(c("invalid assignment. Must be a positive number. Value: `%s`.",t));s=t}}),this}e(f.prototype,"entropy",(function(){return m(this.x0,this.gamma)})),e(f.prototype,"median",(function(){return o(this.x0,this.gamma)})),e(f.prototype,"mode",(function(){return d(this.x0,this.gamma)})),s(f.prototype,"cdf",(function(t){return a(t,this.x0,this.gamma)})),s(f.prototype,"logcdf",(function(t){return p(t,this.x0,this.gamma)})),s(f.prototype,"logpdf",(function(t){return h(t,this.x0,this.gamma)})),s(f.prototype,"pdf",(function(t){return u(t,this.x0,this.gamma)})),s(f.prototype,"quantile",(function(t){return l(t,this.x0,this.gamma)}));export{f as default};
//# sourceMappingURL=index.mjs.map
